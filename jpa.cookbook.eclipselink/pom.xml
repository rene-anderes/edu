<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>org.anderes.edu</groupId>
    <artifactId>jpa.cookbook.eclipselink</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <name>jpa.cookbook.solution1</name>
    <description>Beispiellösung für das Kochbuch mit @Embedded, @OneToMany und @ElementCollection</description>
    <organization>
        <name>René Anderes</name>
    </organization>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <mysql.version>5.1.36</mysql.version>
        <derby.version>10.11.1.1</derby.version>
    </properties>

    <dependencies>

        <!-- JPA API -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>2.1.0</version>
        </dependency>
        <!-- JPA Provider EclipseLink -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>2.6.3</version>
        </dependency>
        <!-- Diese Abhängigkeit sorgt dafür, dass der Kompiler auch die JPA Metadaten generiert -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa.modelgen.processor</artifactId>
            <version>2.6.3</version>
        </dependency>

        <!-- Weitere Dependencies -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <!-- TEST Dependecies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <threadCount>1</threadCount>
                    <reuseForks>true</reuseForks>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Dadurch wird das generierte Metamodell in den Source-Pfad aufgenommen -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}${file.separator}generated-sources${file.separator}annotations</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.derby</groupId>
                            <artifactId>derby</artifactId>
                            <version>${derby.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <driver>${javax.persistence.jdbc.driver}</driver>
                        <url>${javax.persistence.jdbc.url}</url>
                        <username>${javax.persistence.jdbc.user}</username>
                        <password>${javax.persistence.jdbc.password}</password>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>derby-inmemory</id>
            <properties>
                <target.database>Derby</target.database>
                <javax.persistence.jdbc.driver>org.apache.derby.jdbc.EmbeddedDriver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:derby:memory:cookbookDatabase;create=true</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user></javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password></javax.persistence.jdbc.password>
                <javax.persistence.script.drop>src/main/sql/derby-drop-tables.sql</javax.persistence.script.drop>
                <javax.persistence.script.create>src/main/sql/derby-create-Tables.sql</javax.persistence.script.create>
                <javax.persistence.sql.load>src/main/sql/load-derby.sql</javax.persistence.sql.load>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derby</artifactId>
                    <version>${derby.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>derby-embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <target.database>Derby</target.database>
                <javax.persistence.jdbc.driver>org.apache.derby.jdbc.EmbeddedDriver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:derby:cookbookDatabase;create=true</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>APP</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password>APP</javax.persistence.jdbc.password>
                <javax.persistence.script.drop>src/main/sql/derby-drop-tables.sql</javax.persistence.script.drop>
                <javax.persistence.script.create>src/main/sql/derby-create-Tables.sql</javax.persistence.script.create>
                <javax.persistence.sql.load>src/main/sql/load-derby.sql</javax.persistence.sql.load>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derby</artifactId>
                    <version>${derby.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>mysql-local</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <target.database>MySQL</target.database>
                <jdbc.connect.url>jdbc:mysql://localhost</jdbc.connect.url>
                <javax.persistence.jdbc.driver>com.mysql.jdbc.Driver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>${jdbc.connect.url}/recipes</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>cookbook</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password>cookbook</javax.persistence.jdbc.password>
                <javax.persistence.script.drop>src/main/sql/mysql-drop-Tables.sql</javax.persistence.script.drop>
                <javax.persistence.script.create>src/main/sql/mysql-create-tables.sql</javax.persistence.script.create>
                <javax.persistence.sql.load>src/main/sql/load-mysql.sql</javax.persistence.sql.load>
                <database.create>src/main/sql/mysql-createUserAndSchema.sql</database.create>
            </properties>
            <dependencies>
                <!-- MySql Database -->
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>${mysql.version}</version>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>create-schema-user</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <configuration>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <url>${jdbc.connect.url}</url>
                            <username>root</username>
                            <password>lernwerkst@tt</password>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${database.create}</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>create-tables</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>drop-table</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <onError>continue</onError>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${javax.persistence.script.drop}</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-table</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${javax.persistence.script.create}</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                            <execution>
                                <id>load-testdata</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${javax.persistence.sql.load}</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- Wird für Derby-Embedded Driver benötigt, da sonst die DB-Instanz offen bleibt -->
                                <id>shutdown-database-so-that-test-can-run</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <url>jdbc:derby:;shutdown=true</url>
                                    <skipOnConnectionError>true</skipOnConnectionError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
