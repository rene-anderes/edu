<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.anderes.edu.dojo</groupId>
    <artifactId>log4j2-jpa</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>log4j2-jpa</name>

    <description>Mittels Log4j2 Logging in die Datenbank schreiben</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <eclipselink.version>2.6.2</eclipselink.version>
        <derby.version>10.12.1.1</derby.version>
        <mysql.version>5.1.36</mysql.version>
        <log4j2.version>2.7</log4j2.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <systemPropertyVariables>
                        <java.util.logging.config.file>${project.build.outputDirectory}/logging.properties</java.util.logging.config.file>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>
                    <dependencies>
                        <dependency>
                            <groupId>mysql</groupId>
                            <artifactId>mysql-connector-java</artifactId>
                            <version>${mysql.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.derby</groupId>
                            <artifactId>derby</artifactId>
                            <version>${derby.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <driver>${javax.persistence.jdbc.driver}</driver>
                        <url>${javax.persistence.jdbc.url}</url>
                        <username>${javax.persistence.jdbc.user}</username>
                        <password>${javax.persistence.jdbc.password}</password>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j2.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <!-- für den JSON-Converter von Log4j2 wird diese Abhängigkeit benötigt -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.7.9.4</version>
        </dependency>

        <!-- JPA API -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>javax.persistence</artifactId>
            <version>2.1.1</version>
        </dependency>
        <!-- JPA Provider EclipseLink -->
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>eclipselink</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>derby-embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <target.database>Derby</target.database>
                <javax.persistence.jdbc.driver>org.apache.derby.jdbc.EmbeddedDriver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>jdbc:derby:loggingdatabase;create=true</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>APP</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password>APP</javax.persistence.jdbc.password>
                <javax.persistence.script.drop>src/main/scripts/sql/derby-drop-tables.sql</javax.persistence.script.drop>
                <javax.persistence.script.create>src/main/scripts/sql/derby-create-Tables.sql</javax.persistence.script.create>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.apache.derby</groupId>
                    <artifactId>derby</artifactId>
                    <version>${derby.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>mysql-local</id>
            <properties>
                <target.database>MySQL</target.database>
                <jdbc.connect.url>jdbc:mysql://localhost</jdbc.connect.url>
                <javax.persistence.jdbc.driver>com.mysql.jdbc.Driver</javax.persistence.jdbc.driver>
                <javax.persistence.jdbc.url>${jdbc.connect.url}/loggingdatabase</javax.persistence.jdbc.url>
                <javax.persistence.jdbc.user>logging</javax.persistence.jdbc.user>
                <javax.persistence.jdbc.password>logging</javax.persistence.jdbc.password>
                <javax.persistence.script.drop>src/main/scripts/sql/mysql-drop-Tables.sql</javax.persistence.script.drop>
                <javax.persistence.script.create>src/main/scripts/sql/mysql-create-tables.sql</javax.persistence.script.create>
            </properties>
            <dependencies>
                <!-- MySql Database -->
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                    <version>${mysql.version}</version>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>drop-create-table</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>drop-table-before-test-if-any</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${javax.persistence.script.drop}</srcFile>
                                    </srcFiles>
                                    <onError>continue</onError>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-table-before-test</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>${javax.persistence.script.create}</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>mysql-createDatabaseAndUser</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <configuration>
                            <driver>${javax.persistence.jdbc.driver}</driver>
                            <url>${jdbc.connect.url}</url>
                            <username>root</username>
                            <password>lernwerkst@tt</password>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-database-and-user</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <autocommit>true</autocommit>
                                    <srcFiles>
                                        <srcFile>src/main/scripts/sql/mysql-createUserAndSchema.sql</srcFile>
                                    </srcFiles>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
